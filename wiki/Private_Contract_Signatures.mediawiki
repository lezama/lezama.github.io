Private Contract Signatures are a cryptography primitive which we need for the [[Secure Contract Signing Protocol]].

Those are constructed via non-interactive zero-knowledge proofs constructions, and based upon the [http://en.wikipedia.org/wiki/Decisional_Diffie%E2%80%93Hellman_assumption Decisional Diffie-Hellman] assumption.

It was introduced in [http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.118.4142 Abuse-free optimistic contract signing] by Garay, Jakobsson, MacKenzie (1999).
Comment on the usefulness of this paper to the project [[GarayJakobssonMackenzie|here]]. 

This page aims to give an outline of how they work, and how to implement them.

== Some Cryptography ==

The following must be understood first. In particular, the description of PCS we give uses the notations introduced there.

Outline of [[ElGamalSchnorr|ElGamal encryption]], which are encryption and signature schemes.

Outline of [[Sigma_Protocols|Sigma protocols]], which are composable, interactive zero-knowledge proof schemes.

== Simplified scheme ==



An <math>\textrm{SPCS}(m)</math> is
:<math>\textrm{NI}\left(\bigvee_i\textrm{CCE}^T(m,(\textrm{Pub}^{P_i},v))\right)(g^s,H(g^s,m))
</math>
with s random. Intuitively:
* It constitutes a proof that <math>v=\{m\}_{\textrm{Pub}^T}</math> under [[ElGamal]].
* In order to provide such a proof one needs to have the ephemeral key used.
* It also constitutes a proof that the ephemeral key was one of <math>\{\textrm{Priv}^{P_i}\}</math>.
* Thus, whoever has done it, has admittedly signed m.
* But in order to which <math>P_i</math> has signed, one needs a proof of which of private keys was used. 


Thus unravel it, we need <math>\textrm{USPCS}_i(m)</math>
:<math>\textrm{NI}\left(\textrm{CCE}^T(m,(\textrm{Pub}^{P_i},v))\vee\textrm{CCD}^T(m,(\textrm{Pub}^{P_i},v))\right)(g^{s'},H(g^{s'},m))
</math>
with s' random. Intuitively:
* It constitutes a proof that <math>v=\{m\}_{\textrm{Pub}^T}</math> under [[ElGamal]].
* In order to provide such a proof one need to either have <math>\textrm{Priv}_{P_i}</math> used, or have <math>\textrm{Priv}_T</math>.
* In any case it constitutes a proof that the ephemeral key used was <math>P_i</math>'s private key.


A signature <math>\textrm{SIG}_i(m)</math> is a pair
:<math> \left(\textrm{SPCS}(m), \textrm{USPCS}_i(m)\right).
</math>
Notice that:
* No step discloses <math>\textrm{Priv}_{P_i}</math>.
* Yet is constitutes a proof that <math>v=\{m\}_{\textrm{Pub}^T}</math> with ephemeral key <math>\textrm{Priv}_{P_i}</math>, which amounts to signing m.

== Normal scheme ==

Normally, a <math>\textrm{PCS}_B^A(m)</math> is
:<math>\textrm{NI}\left((\textrm{CCE}^T(0,n)\wedge\textrm{Schnorr}_B)\vee(\textrm{CCE}^T(1,n)\wedge\textrm{Schnorr}_A)\right)(g^s,H(g^s,m))</math>
with s random.

== To do ==

Check duplication of a and c in and and or constructs.

Check whether non-interactive CCE under ephemeral key PubB and challenge m is an established way of signing.

Give simulators for CCE and CCT.